/*CSS general de elementos*/
/*
'*' es el selector universal, "selecciona TODO", tiene especifidad 0, 
cualquier otra ajuste en otro elemento lo va a sobreescribir.
 */
*{
    margin: 0px;
    padding: 0px;
}
body{
    background-color: #222;
    color: white;
    font: 200 14px 'Poppins', sans-serif;
}
h2{
    font-size: 36px;
    line-height: 36px; /*Igual que el tamaño de la fuente, este es el margen entre líneas, mínimo hay que dejar el tamaño de la fuente, si no podría darse el caso de que letras pertenecientes a distintas líneas se colapsen*/
}
h3{
    color: #999;
    font-size: 18px;
    font-weight: 300;
}
nav{
    position: fixed; /*Para que el navegador baje a medida que hacemos scroll hacia abajo en la pantalla de visualización*/
    width: 100%;
    height: 55px; /*Porque el logo ocupa 55px de altura*/
    background-color: #222;
    border-bottom: 1px solid white;
    padding-top: 10px;
    text-align: center;
}
/*
DESCENDANT COMBINATOR
Solo si estando en nav encuentro un ul el display del ul sera inline-block
*/
nav ul{
    display: inline-block;
}
nav ul li{
    padding-top: 12px;
}
section{
    padding: 10px 100px 10px 100px;
}
p{
    text-align: justify;
}
cite{
    font-weight: 300;
}
i{
    font-size: 24px;
}
/* Pseudoclases "etiqueta"+":"+"pseudoclase" */
i:hover{
    color: #ffc900;
}
a{
    text-decoration: none;
}
a:any-link{
    color: white;
}
/*Por compatibilidad con otros navegadores*/
a:-webkit-any-link{
    color: white;
}
a:-moz-any-link{
    color: white;
}
a:hover{ /*Importante la posición para que se sobreescriba la última*/
    color: #ffc900;
}
/*
Display de los elementos de linea como “span” por defecto es inline, para los elementos de bloque, es decir, aquellos que tras su colocación se produce un salto de línea, su display por defecto es Block.

Tenemos otro display alternativo que es el inline-block, que mantiene las propiedades de heigh y witdth de Block, sin embargo, en el resto es igual a un elemento inline. En inline-block no se produce salto de línea.

Cuando un elemento es flotante no podemos asignarle un display inline-block.
*/
ul{
    list-style: none;
}
li{
    float: left;
    /*width: 30px;*/
    margin-right: 5px;
}
button{
    border-radius: 10px;
}
footer{
    height: 55px;
    padding-top: 10px;
    text-align: center;
}
footer ul{
    display: inline-block; /* Necesario para que se aplique el text-align: center de footer */
}
footer ul li{
    float: left;
}
/*CSS Ids y Clases*/
.hastag{
    color: #ffc900;
}
/* EN DESUSO POR IMPLEMENTACIÓN DE HTML Y LA ELIMINACIÓN DE "class = seccion" */
.seccion{
    padding: 10px 100px 10px 100px;
    /*
    padding-top: 10px;
    padding-left: 100px;
    padding-bottom: 10px
    padding-right: 100px;
    */
}
#logo{
    padding-top: 0px;
}
#redessociales{
    margin-top: 20px; /*Utilizamos margin y no pading, porque queremos separar de las etiquetas h3 no las redes sociales entre sí*/
}
#inicio{
    padding-top: 75px; /* Utilizamos padding para que el navegador no se colapse con la sección inicio (65px de altura de nav + 10 más de margen) */
    background-image: url("../imagenes/inicio.png");
    min-height: 280px; /*280 + 10 +10 de padding para que la foto no se duplique por abajo*/
    background-repeat: no-repeat;
    background-size: cover; /*Para que la imagen de fondo se ajuste para ocupar todo el tamaño horizontal*/
}
#experiencia{
    background-color: white;
    color: #222;
}
#portfolio{
    border-top: 1px solid #ffc900;
}
.masinfo button{
    background-color: #ffc900;
    font-weight: 600;
    padding-left: 15px;
    padding-right: 15px;
    padding: 5px;
    margin-top: 5px;
}
/*Grid sobremi*/
#sobremi{
    display: grid;
    grid-template-columns: 188px 1fr; /*La imagen tiene un ancho de 188px, 1fr quiere decir automático, es decir el ancho del texto será automático*/
    align-items: center; /*Aportación mía, alineación vertical*/
    grid-gap: 50px; /*Aportación mía*/
    margin-top: 20px; /*Aportación mía*/
    margin-bottom: 20px; /*Aportación mía*/
}
#sobremi h2{
    margin-bottom: 15px;
}
#sobremi .masinfo{
    margin-top: 15px;
}
#sobremi .masinfo button{
    padding-top: 5px;
    padding-bottom: 5px;
    padding-left: 10px; /*El padding aumenta el tamaño del elemento, el margin no*/
    padding-right: 10px;
}
#contactar{
    background-color: #ffc900;
    color: #222;
}
/*Card portfolio*/
.filaportfolio{ /*Flex se utiliza para la alineación de bloques y conjuntos más complejos*/
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
    gap: 30px 30px;
    margin-bottom: 15px;
    margin-top: 15px;
}
.card{
    width: 250px;
    background-color: #191919;
    border-radius: 15px;
}
.card img, .card video, .card iframe{
    border-radius: 15px 15px 0px 0px;
}
.card h3{
    color: #ffc900;
}
.card h4{
    margin: 0px 5px 5px 0px;
}
.card h3, .card h4, .card p, .card .masinfo{ /*Para aplicar a varios elementos*/
    padding: 0px 15px;
}
.card .masinfo{
    margin: 15px 0px 15px 0px;
    height: 26px;
}
.card .sep{
    margin: 0px 5px 5px 0px;
    border: 1px solid #ffc900;
}
.card .masinfo button{
    float: right;
}
/*Card experiencia*/
.gridexp{
    display: grid;
    grid-template-columns: repeat(2,350px); /*3 columnas que se adapten automáticamente al espacio disponible (1fr)*/
    grid-gap: 10px;
    justify-content: space-between;
    align-content: space-around; /*Alinea verticalmente el grid*/
}
.cardexp{
    background-color: #222;
    border-radius: 15px;
    color: white;
    padding: 10px 15px;
    /*width: 350px; Esto estaría mal, al utilizar grid con elementos, para definir el ancho de estos elementos lo hacemos con grid-template-columns*/
}
.cardexp h2{
    margin-bottom: 15px;
}
.cardexp h3{
    margin-bottom: 20px;
}
.cardexp ul{
    display: flex; /*Flex trabaja a nivel de fila es decir en una única dimensión, por el contrario grid en dos dimensiones*/
    justify-content: flex-end;
}
.card li{
    height: 30px;
}
/*Formulario*/
.itemform{
    display: grid;
    grid-template-columns: 150px 350px;
    justify-content: center;
    margin-bottom: 10px; /*Aquí no podríamos utilizar gap por no tener un contenedor global, por eso utilizamos margin botton*/
}
.itemform label{
    font-weight: 700;
}
.itemform input, .itemform textarea{
    border-radius: 5px;
    border: 1px solid white;
}
input[type="submit"]{ /*Selector de atributo '[]'*/
    background-color: #222;
    border: 1px solid #222;
    color: white;
    padding: 10px;
    grid-column: 2/3;
    justify-self: end; /*Justificar el elemento concreto dentro del padre que es la segunda columna del grid, para que el botón no ocupe todo el ancho de la columna*/
} 
